# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module GlobalMilesAirlineApi
  # FlightsController
  class FlightsController < BaseController
    @instance = FlightsController.new

    class << self
      attr_accessor :instance
    end

    def instance
      self.class.instance
    end

    # This endpoint allows to recommend a new member to airlines.
    # @param [String] accept Required parameter: It advertises which content
    # type is able to understand.
    # @param [String] content_type Required parameter: It tells the client what
    # the content type of the returned.
    # @param [NewMemberRequest] body Required parameter: The body of the
    # request.
    # @return NewMemberResponse response from the API call
    def create_recommend_a_new_member(accept,
                                      content_type,
                                      body)
      # Prepare query url.
      _query_builder = Configuration.get_base_uri
      _query_builder << '/v1/airline/members/'
      _query_url = APIHelper.clean_url _query_builder

      # Prepare headers.
      _headers = {
        'Accept' => accept,
        'Content-Type' => content_type
      }

      # Prepare and execute HttpRequest.
      _request = @http_client.post(
        _query_url,
        headers: _headers,
        parameters: body.to_json
      )
      _context = execute_request(_request)
      validate_response(_context)

      # Return appropriate response type.
      decoded = APIHelper.json_deserialize(_context.response.raw_body)
      NewMemberResponse.from_hash(decoded)
    end

    # This endpoint allows to search the status of flight.
    # @param [String] accept Required parameter: It advertises which content
    # type is able to understand.
    # @param [String] content_type Required parameter: It tells the client what
    # the content type of the returned.
    # @param [FlightStatusRequest] body Required parameter: The body of the
    # request.
    # @return FlightStatusResponse response from the API call
    def create_flight_status(accept,
                             content_type,
                             body)
      # Prepare query url.
      _query_builder = Configuration.get_base_uri
      _query_builder << '/v1/airline/flights/actions/status'
      _query_url = APIHelper.clean_url _query_builder

      # Prepare headers.
      _headers = {
        'Accept' => accept,
        'Content-Type' => content_type
      }

      # Prepare and execute HttpRequest.
      _request = @http_client.post(
        _query_url,
        headers: _headers,
        parameters: body.to_json
      )
      _context = execute_request(_request)
      validate_response(_context)

      # Return appropriate response type.
      decoded = APIHelper.json_deserialize(_context.response.raw_body)
      FlightStatusResponse.from_hash(decoded)
    end

    # This endpoint allows to create a flight on the system and defines the
    # mileage rules for the passenger.
    # @param [String] accept Required parameter: It advertises which content
    # type is able to understand.
    # @param [String] content_type Required parameter: It tells the client what
    # the content type of the returned.
    # @param [FlightCreateRequest] body Required parameter: The body of the
    # request.
    # @return Response response from the API call
    def create_flight_creation(accept,
                               content_type,
                               body)
      # Prepare query url.
      _query_builder = Configuration.get_base_uri
      _query_builder << '/v1/airline/flights'
      _query_url = APIHelper.clean_url _query_builder

      # Prepare headers.
      _headers = {
        'Accept' => accept,
        'Content-Type' => content_type
      }

      # Prepare and execute HttpRequest.
      _request = @http_client.post(
        _query_url,
        headers: _headers,
        parameters: body.to_json
      )
      _context = execute_request(_request)
      validate_response(_context)

      # Return appropriate response type.
      decoded = APIHelper.json_deserialize(_context.response.raw_body)
      Response.from_hash(decoded)
    end

    # This endpoint allows to search a member on the airline system.
    # @param [String] accept Required parameter: It advertises which content
    # type is able to understand.
    # @param [String] content_type Required parameter: It tells the client what
    # the content type of the returned.
    # @param [MemberSearchRequest] body Required parameter: The body of the
    # request.
    # @return MemberSearchResponse response from the API call
    def create_member_search(accept,
                             content_type,
                             body)
      # Prepare query url.
      _query_builder = Configuration.get_base_uri
      _query_builder << '/v1/airline/members/actions/search'
      _query_url = APIHelper.clean_url _query_builder

      # Prepare headers.
      _headers = {
        'Accept' => accept,
        'Content-Type' => content_type
      }

      # Prepare and execute HttpRequest.
      _request = @http_client.post(
        _query_url,
        headers: _headers,
        parameters: body.to_json
      )
      _context = execute_request(_request)
      validate_response(_context)

      # Return appropriate response type.
      decoded = APIHelper.json_deserialize(_context.response.raw_body)
      MemberSearchResponse.from_hash(decoded)
    end
  end
end
